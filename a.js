:auto USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM
'file:///no.csv' AS line
 
MERGE (service:Service{name: line.`Service`})
MERGE (function:Function{name: line.`Function`})
MERGE (businessservice:BusinessService{name: line.`Business Service`})
MERGE (importantbusinessservice:ImportantBusinessService{name: line.`Important Business Service`})
 
MERGE  (people:People{name:'People', category:'Mapping'})
MERGE (businesssponsor: BusinessSponsor{name: line.`Business Sponsor`, category: 'People'})
MERGE (ithead:ITHead{name: line.`IT Head`,category: 'People'})
MERGE (teamname:TeamName{name: line.`Team Name`,category: 'People'})
MERGE (teampl:TeamPL{name: line.`Team PL`,category: 'People'})
MERGE (teamsl:TeamSL{name: line.`Team SL`,category: 'People'})
 
MERGE  (process:Process {name:'Process', category:'Mapping'})
 
MERGE (processmapsavailability:ProcessMapsAvailability{name: line.`Process Maps Availability`, category:'Process'})
 
MERGE  (technical:Technical{name:'Technical', category:'Mapping'})
MERGE (applicationinventoryavailable:ApplicationInventoryAvailable{name: line.`Application Inventory Available`, category: 'Technical'})
MERGE (numberofcriticalapplications:NumberofCriticalApplications{name: line.`Number of Critical Applications`, category: 'Technical'})
MERGE (totalnumberofapplications:TotalNumberofApplications{name: line.`Total Number of Applications`, category: 'Technical'})

MERGE  (facility:Facility{name:'Facility', category:'Mapping'})
MERGE (officepl:OfficePL{name: line.`Office PL`, category:'Facility'})
MERGE (officesl:OfficeSL{name: line.`Office SL`, category:'Facility'})
 
MERGE  (scenario:Scenario{name:'Scenario', category:'Scenario Testing'})
MERGE (riskappetite:RiskAppetite{name: line.`Risk Appetite`, category:'Scenario Testing'})
MERGE (minimumtolerancelevel:MinimumToleranceLevel{name: line.`Minimum Tolerance Level`, category:'Scenario Testing'})
MERGE (maximumtolerancelevel:MaximumToleranceLevel{name: line.`Maximum Tolerance Level`, category:'Scenario Testing'})
MERGE (expectedtime:ExpectedTime {name: line.`Expected Time`, category:'Scenario Testing'})
MERGE (scenarioname:ScenarioName{name: line.`Scenario Name`, category:'Scenario Testing'})
MERGE (testcasedescription:TestCaseDescription{name: line.`Test Case Description`, category:'Scenario Testing'})
MERGE (area:Area{name: line.`Area`, category:'Scenario Testing'})
MERGE (teststatus:TestStatus{name: line.`Test Status`, category:'Scenario Testing'})
MERGE (isvulnerable:IsVulnerable{name: line.`Is Vulnerable?`, category:'Scenario Testing'})
MERGE (vulnerabilities:Vulnerabilities{name: line.`Vulnerabilities`, category:'Scenario Testing'})
MERGE (testtype:TestType{name: line.`Test Type`, category:'Scenario Testing'})
MERGE (testresult:TestResult{name: line.`Test Result`, category:'Scenario Testing'})
 
MERGE  (thridparty:ThirdParty{name:'Third Party', category:'Mapping'})
MERGE (thirdpartyname:ThirdPartyName{name: line.`Third Party Name`, category:'Third Party'})
MERGE (primarysponsor:PrimarySponsor{name: line.`Primary Sponsor`, category:'Third Party'})
MERGE (tppl:TPPL{name: line.`TP PL`, category:'Third Party'})
MERGE (tpsl:TPSL{name: line.`TP SL`, category:'Third Party'})
 
MERGE  (application:Application{name:'Application', category:'Mapping'})
MERGE (applicationname:ApplicationName{name: line.`Application Name`})
MERGE (description:Description{name: line.`Description`})
MERGE (maindatastorename:MainDatastoreName{name: line.`Main Datastore Name`})
MERGE (datasets:DataSets{name: line.`Data Sets`})
MERGE (datasubject:DataSubject{name: line.`Data Subject`})
MERGE (subdesc:SubDesc{name: line.`Sub Desc`})
MERGE (dataentity:DataEntity{name: line.`Data Entity`})
MERGE (entitydesc:EntityDesc{name: line.`Entity Desc`})
MERGE (datacategory:DataCategory{name: line.`Data Category`})
MERGE (dataobject:DataObject{name: line.`Data Object`})
MERGE (dataatrributes:DataAtrributes{name: line.`Data Atrributes`})
MERGE (synonyms:Synonyms{name: line.`Synonyms`})
MERGE (attrdesc:AttrDesc{name: line.`Attr Desc`})
MERGE (infrastructureowner:InfrastructureOwner{name: line.`Infrastructure Owner`})
MERGE (hosting:Hosting{name: line.`Hosting`})
MERGE (datastoragepl:DataStoragePL{name: line.`Data Storage PL`})
MERGE (datastoragesl:DataStorageSL{name: line.`Data Storage SL`})
MERGE (dataaccesspl:DataAccessPL{name: line.`Data Access PL`})
MERGE (dataaccesssl:DataAccessSL{name: line.`Data Access SL`})
 
MERGE  (function)-[:SERVICE]->(service)
MERGE (service)-[:BUSINESSSERVICE]->(businessservice)
MERGE  (businessservice)-[:IMPORTANTBUSINESSSERVICE]->(importantbusinessservice)
 
MERGE  (businessservice)-[:PEOPLE]->(people)
MERGE  (people)-[:BUSINESSSPONSOR]->(businesssponsor)
MERGE  (people)-[:ITHEAD]->(ithead)
MERGE  (people)-[:TEAMNAME]->(teamname)
MERGE  (people)-[:TEAMPL]->(teampl)
MERGE  (people)-[:TEAMSL]->(teamsl)
 
MERGE  (businessservice)-[:PROCESS]->(process)
MERGE  (process)-[:PROCESSMAPSAVAILABILITY]->(processmapsavailability)
 
MERGE  (businessservice)-[:TECHNOLOGY]->(technical)
MERGE  (technical)-[:APPLICATIONINVENTORYAVAILABLE]->(applicationinventoryavailable)
MERGE  (technical)-[:NUMBEROFCRITICALAPPLICATIONS]->(numberofcriticalapplications)
MERGE  (technical)-[:TOTALNUMBEROFAPPLICATIONS]->(totalnumberofapplications)
 
MERGE  (businessservice)-[:FACILITY]->(facility)
MERGE  (facility)-[:OFFICEPL]->(officepl)
MERGE  (facility)-[:OFFICESL]->(officesl)
 
MERGE  (businessservice)-[:SCENARIOS]->(scenario)
MERGE  (scenario)-[:RISKAPPETITE]->(riskappetite)
MERGE  (scenario)-[:MINIMUMTOLERANCELEVEL]->(minimumtolerancelevel)
MERGE  (scenario)-[:MAXIMUMTOLERANCELEVEL]->(maximumtolerancelevel)
MERGE  (scenario)-[:EXPECTEDTIME]->(expectedtime)
MERGE  (scenario)-[:SCENARIONAME]->(scenarioname)
MERGE  (scenario)-[:TESTCASEDESCRIPTION]->(testcasedescription)
MERGE  (scenario)-[:AREA]->(area)
MERGE  (scenario)-[:TESTSTATUS]->(teststatus)
MERGE  (scenario)-[:ISVULNERABLE]->(isvulnerable)
MERGE  (scenario)-[:VULNERABILITIES]->(vulnerabilities)
MERGE  (scenario)-[:TESTTYPE]->(testtype)
MERGE  (scenario)-[:TESTRESULT]->(testresult)
 
MERGE  (businessservice)-[:APPLICATION]->(application)
MERGE  (application)-[:APPLICATIONNAME]->(applicationname)       
MERGE  (applicationname)-[:DESCRIPTION]->(description)
MERGE  (applicationname)-[:MAINDATASTORENAME]->(maindatastorename)
MERGE  (maindatastorename)-[:DATASETS]->(datasets)
MERGE  (datasets)-[:DATASUBJECT]->(datasubject)
MERGE  (datasubject)-[:SUBDESC]->(subdesc)
MERGE  (datasubject)-[:DATAENTITY]->(dataentity)
MERGE  (dataentity)-[:ENTITYDESC]->(entitydesc)
MERGE  (dataentity)-[:DATACATEGORY]->(datacategory)
MERGE  (dataentity)-[:DATAOBJECT]->(dataobject)
MERGE  (dataobject)-[:DATAATRRIBUTES]->(dataatrributes)
MERGE  (dataatrributes)-[:SYNONYMS]->(synonyms)
MERGE  (dataatrributes)-[:ATTRDESC]->(attrdesc)
MERGE  (applicationname)-[:INFRASTRUCTUREOWNER]->(infrastructureowner)
MERGE  (applicationname)-[:HOSTING]->(hosting)
MERGE  (applicationname)-[:DATASTORAGEPL]->(datastoragepl)
MERGE  (applicationname)-[:DATASTORAGESL]->(datastoragesl)
MERGE  (applicationname)-[:DATAACCESSPL]->(dataaccesspl)
MERGE  (applicationname)-[:DATAACCESSSL]->(dataaccesssl)
 
MERGE  (businessservice)-[:THIRDPARTY]->(thridparty)
MERGE  (thridparty)-[:THIRDPARTYNAME]->(thirdpartyname)
MERGE  (thridparty)-[:PRIMARYSPONSOR]->(primarysponsor)
MERGE  (thridparty)-[:TPPL]->(tppl)
MERGE  (thridparty)-[:TPSL]->(tpsl)

